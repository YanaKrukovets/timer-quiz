{"ast":null,"code":"var _jsxFileName = \"/Users/yana/timer-quiz/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Test = () => {\n  _s();\n\n  const [data, setData] = useState(null),\n        [index, setIndex] = useState(0);\n  let buttons = [],\n      question = \"\",\n      page;\n\n  const checkAnswer = (answer, data) => {\n    if (index < 10 && answer == data[index].correctAnswer) {\n      setIndex(index + 1);\n      buttons = getButtons(data);\n      question = getQuestion(data);\n    }\n  };\n\n  const getAnswers = data => {\n    let answers = [];\n    answers.push(data[index].correctAnswer);\n\n    for (let j = 0; j < 3; j++) {\n      answers.push(data[index].incorrectAnswers[j]);\n    }\n\n    answers.sort();\n    return answers;\n  };\n\n  const getButtons = data => {\n    let buttons = [],\n        answers = getAnswers(data);\n\n    for (let i = 0; i < answers.length; i++) {\n      buttons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"test\",\n        onClick: e => checkAnswer(e.target.innerText, data),\n        children: answers[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }, this));\n    }\n\n    return buttons;\n  };\n\n  const getQuestion = data => {\n    return data[index].question;\n  };\n\n  useEffect(() => {\n    fetch('https://api.trivia.willfry.co.uk/questions?categories=geography&limit=10').then(res => {\n      return res.json();\n    }).then(data => {\n      setData(data);\n    });\n  }, []);\n\n  if (data) {\n    buttons = getButtons(data);\n    question = getQuestion(data);\n  }\n\n  if (index >= 10) {\n    page = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Congratulations! You did it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  } else {\n    page = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), buttons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this);\n  }\n\n  return page;\n};\n\n_s(Test, \"UScYdpvJJmoxDoWxtgVK1w7saEA=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/yana/timer-quiz/src/Test.js"],"names":["React","useEffect","useState","Test","data","setData","index","setIndex","buttons","question","page","checkAnswer","answer","correctAnswer","getButtons","getQuestion","getAnswers","answers","push","j","incorrectAnswers","sort","i","length","e","target","innerText","fetch","then","res","json"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\n\nexport const Test = () => {\n    const [data, setData] = useState(null),\n          [index, setIndex] = useState(0);\n\n    let buttons = [], question = \"\", page;\n        \n    const checkAnswer = (answer, data) => {\n        if (index < 10 && answer ==  data[index].correctAnswer) {\n            setIndex(index + 1);\n            buttons = getButtons(data);\n            question = getQuestion(data); \n        }\n    }\n        \n        const getAnswers = (data) => {\n            let answers = [];\n        \n            answers.push(data[index].correctAnswer);\n            for (let j=0; j<3; j++) {\n                answers.push(data[index].incorrectAnswers[j]);\n            }\n            answers.sort();\n        \n            return answers;\n        }\n        \n        const getButtons = (data) => {\n            let buttons = [],\n                answers = getAnswers(data);\n        \n            for (let i=0; i<answers.length; i++) {\n                buttons.push(<button className=\"test\" key={i} onClick={(e) => checkAnswer(e.target.innerText, data)}>{answers[i]}</button>);\n            }\n            \n            return buttons;\n        }\n        \n        const getQuestion = (data) => {\n            return data[index].question;\n        }\n        \n\n    useEffect(()=>{\n        fetch('https://api.trivia.willfry.co.uk/questions?categories=geography&limit=10')\n             .then(res => {\n                 return res.json();\n             })\n             .then(data => {\n                 setData(data);\n             })\n    }, []);\n\n    if (data) {\n        buttons = getButtons(data);\n        question = getQuestion(data);\n    }\n\n    if (index >= 10) {\n        page = <h1>Congratulations! You did it!</h1>;\n    } else {\n        page = (<div>\n            <h1>{question}</h1>\n            {buttons}\n        </div>\n    );\n    }\n\n    return page;\n}"]},"metadata":{},"sourceType":"module"}